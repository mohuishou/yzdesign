<?php
defined('WEKIT_VERSION') or exit(403);
/**
 * 前台入口
 *
 * generated by phpwind.com
 */
class PostController extends PwBaseController {
	
	private $tid;
	private $pid;
	private $uid;
	
	public function beforeAction($handlerAdapter) {
		parent::beforeAction($handlerAdapter);
		//TODO do something before all the action
		list( $tid, $pid ) = $this->getInput( array( 'tid', 'pid' ), 'post' );
		$this->tid = $tid;
		$this->pid = $pid;
		$this->uid = wekit::getLoginUser()->uid;
	}
	
	public function run() {
		//TODO Insert your code here
		$tid = $this->tid;
		$pid = $this->pid;
		if( $this->_isAdmin( $tid ) ) { $this->showError( '你没有权限操作' ); }
		if( $this->_getRead()->isPid( $tid, $pid ) ) { $this->showError( '请不要重复添加' ); }
		$dm = $this->_getReadDm();
		$dm->setTid( $tid );
		$dm->setJson( $this->_getRead()->addPid( $tid, $pid ) );
		if( $this->_getRead()->get( $tid ) == false ) {
			$this->_getRead()->add( $dm );
		} else {
			$this->_getRead()->update( $dm );
		}
		$this->showMessage( '添加成功' );
	}
	
	public function unsetAction() {
		$tid = $this->tid;
		$pid = $this->pid;
		if( $this->_isAdmin( $tid ) ) { $this->showError( '你没有权限操作' ); }
		if( !$this->_getRead()->isPid( $tid, $pid ) ) {
			$this->showError( '已取消聚合，请勿重复操作' );
		}
		$dm = $this->_getReadDm();
		$dm->setTid( $tid );
		$dm->setJson( $this->_getRead()->daletePid( $tid, $pid ) );
		$this->_getRead()->update( $dm );
		$this->showMessage( '取消聚合成功！' );
	}
	
	public function juheAction() {
		$tid = $this->getInput( 'tid', 'get' );
		$this->setOutput( $tid, 'tid' );
		$this->setTemplate( 'juhe' );
	}
	
	public function postAction() {
		if( !$this->_isGroups() ) { $this->showError( '你没有权限操作' ); }
		$tid = $this->tid;
		if( !$tid ) { $tid = $this->getInput( 'tid', 'post' ); }
		list( $type, $jutid ) = $this->getInput( array( 'type', 'jutid' ), 'post' );
		if( !$tid ) { $this->showError( '出现未知错误！' ); }
		if( !$type ) { $this->showError( '请选择聚合类型' ); }
		if( !$jutid ) { $this->showError( '请填写需要聚合到本帖的tid' ); }
		if( $tid == $jutid ) { $this->showError( '不允许聚合本帖' ); }
		if( $this->_getJuhe()->isTid( $tid, $jutid ) ) { $this->showError( '该帖已存在' ); }
		if( !$this->_isThread( $jutid ) ) { $this->showError( '被聚合的帖子不存在' ); }
		$dm = $this->_getJuheDm();
		$dm->setTid( $tid );
		$dm->setType( $this->_getJuhe()->addType( $tid, $jutid, $type ) );
		$dm->setTids( $this->_getJuhe()->addTid( $tid, $jutid ) );
		if( $this->_getJuhe()->get( $tid ) == false ) {
			$this->_getJuhe()->add( $dm );
		} else {
			$this->_getJuhe()->update( $dm );
		}
		$this->showMessage( '添加成功' );
	}
	
	private function _isThread( $tid ) {
		$PwThred = $this->_getThread();
		$getThread = $PwThred->getThread($tid, 3);
		if( !$getThread || empty( $getThread ) ) {
			return false;
		} else {
			return true;
		}
	}
	
	private function _isAdmin( $tid ) {
		$uid = $this->uid;
		$PwThred = $this->_getThread();
		$getThread = $PwThred->getThread($tid, 3);
		if($uid != $getThread['created_userid']) {
			if( $this->_isGroups() ) {
				return false;
			}
			return true;
		}
		return false;
	}
	
	private function _isGroups() {
		$gid = wekit::getLoginUser()->gid;
		$group = $this->set('group');
		if( is_array( $group ) ) {
			foreach( $group as $gid2 ) {
				if( $gid2 == $gid ) {
					return true;
				}
			}
		}
		return false;
	}
	
	private function set($name, $field=false, $write=false, $data=array()) {
		$script = Wekit::load('EXT:MedzExt20131221.service.helps.App_Medz_Helps');
		return $script->medz($name, $field, $write, $data);
	}
	
	private function _getThread() {
		return wekit::load('SRV:forum.PwThread');
	}
	
	private function _getJuhe() {
		return Wekit::loadDao('EXT:MedzExt20131221.service.App_Medz_Ext20131221_Juhe');
	}
	
	private function _getJuheDm() {
		return Wekit::load('EXT:MedzExt20131221.service.dm.App_Medz_Ext20131221_JuheDm');
	}
	
	private function _getRead() {
		return Wekit::loadDao('EXT:MedzExt20131221.service.App_Medz_Ext20131221_Read');
	}
	
	private function _getReadDm() {
		return Wekit::load('EXT:MedzExt20131221.service.dm.App_Medz_Ext20131221_ReadDm');
	}
}